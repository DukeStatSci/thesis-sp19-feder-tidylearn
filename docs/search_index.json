[
["index.html", "INSERT TITLE HERE Preliminary Content Acknowledgements Abstract Dedication", " INSERT TITLE HERE Benjamin Feder May 2019 Preliminary Content Acknowledgements Thank Tori for her comments (and others if you wish) here. Abstract Add abstract here. Keywords: List some keywords here. Dedication You can have a dedication here if you wish. "],
["1-introduction.html", "Chapter 1 Introduction", " Chapter 1 Introduction At Duke University, STA 101 is the primary introductory statistics course, where students are assumed to have entered the class without any statistical knowledge. The majority of the students enrolled in the course do not plan to pursue a future statistical education, which lends the course to one centered around the learning of statistical applications, where students are taught how to relate the concepts covered in STA 101 to their future works. At the beginning, the students are split into groups where they complete assignments throughout the course together. The class is split into seven units, and every section has at least one lab, taught in R, to bolster the learning segment. To conclude the semester, students display their grasp of the course through a project conducted in R with their student group. The project, while constrained to a specific dataset, is relatively open-ended, as the groups can analyze various features of the data. Due to the nature of flexibility promoted by this project, students are encouraged to display aspects of creativity in their analyses, whether it is focusing on solely movies produced by Warner Bros. Entertainment Inc., or producing a new variable tracking if a movie received a nomination for best director, best actor or best actress. Creativity often stems from the exploratory data analysis process, where groups can find anomalies and/or interesting aspects that they can choose to further analyze as they progress to the analysis required in the project. The importance of utilizing programming languages in introductory statistics courses is due to the inherent nature of the class. Since the majority of students will apply the concepts covered in the course in their future work, an effective tool is using a programming tool. The most popular one in the scope of statistics in R, which has become widely used in the field. When using R as a supplement to the course, there are two prevailing, and competing, techniques. Either students can be instructed to work with a relatively new suite of packages called the Tidyverse, or to use Base R commands that have been in use for far longer. The Tidyverse was created to make coding in R simpler, but with that comes less of an internet community due to its relatively young age. At the University, STA 101 classes have been taught distinctly using one or the other, which creates an optimal platform for analyzing the differences in using these syntaxes. Does one coding technique encourage a certain level of creativity not inforced by the other? That is the question this study seeks to discover through the analysis of these group projects, which are available using both base R and Tidyverse methods. Creativity can be measured by marking certain aspects of the exploratory data analysis process, such as tracking the mutation and creation of new variables, subsetting the dataset, and analyzing specific groups within the data. "],
["2-literature-review.html", "Chapter 2 Literature Review", " Chapter 2 Literature Review [TO DO FROM MINE:] Still need to write the lit review. 2013 project assignment: https://www2.stat.duke.edu/courses/Fall13/sta101/projects/project2.pdf 2014 project assignment: https://stat.duke.edu/courses/Fall14/sta101.001/project/project2.html 2015 spring: https://github.com/mine-cetinkaya-rundel/sta101_sp15/blob/master/Projects/Project%202/project2.Rmd 2015 fall: https://github.com/mine-cetinkaya-rundel/sta101_f15/blob/master/Projects/Project%202/project2.Rmd 2016 spring: https://github.com/mine-cetinkaya-rundel/sta101-s16/blob/master/Project/project.Rmd Source: http://varianceexplained.org/r/teach-tidyverse/ -Tidyverse allows students to make visualizations and do stuff with data from the get go (high-level analysis), rather than focusing on learning R syntax from the start -Have been able to teach pretty basic code using ~facet_wrap in 2-3 hours to people who have never used coding before -Syntax is flexible for other work in the future from the start -However, doesn’t teach conditionals and loops from the start -Loops are extremely inefficient for the most part and are advanced generally to make them more efficient -There’s only one way to do most tidyverse commands, like manipulating data frames, which makes this consistent -Will eventually have to learn important base R stuff, but can use them in combination with tidyverse tools, so you can sprinkle them in -ex. lm(), mean()—allows you to apply these functions immediately once they understand tidyverse syntax -Goal of introductory stats course coding: R is worth learning, can bolster statistical analysis -Want to get people started doing stuff in R from the start to draw them in and also as supplementary material for intro stats From comments: One issue—not as much help online for Tidyverse, students end up with a mix sometimes when looking up issues they run into Source: http://varianceexplained.org/r/teach_ggplot2_to_beginners/ -ggplot2 should be taught first before base R, despite being a third-party package -To make the same equivalent plots in base R that you can with ggplot(), you need to know how to generally run for() loops and add more lines such as legend() to make the plots readable -ggplot2 plots are also better looking -The goal with coding in introductory statistics courses is to convince students that they want to learn coding, and giving them the tools to make cool plots from the start will help them get excited -”ggplot2 aims for abstraction, where the choices the you make are the ones that matter for your visualization of the data” -tidy data is required, but it’s good practice since other general functions such as lm() require tidy data anyways Source: The mosiac package: Helping Students to ‘Think with Data’ Using R -Goal: The mosiac package should be easy to implement for beginning coders, allowing them to make insights without an extensive coding background -”Less volume, more creativity” -mosaic seeks to support the belief of the importance of learning how to work in a multivariate environment -uses the same template for numerical, categorical and graphical summaries -recommends plotting in two variable settings first, because you might not be able to do in base R + more interesting with two variables as opposed to just one -mplot() incorporates an argument to use ggplot2 graphics instead of Base R, also can create interactive plots in ggplot2 -mosaic also has specific functions geared toward introductory students, such as rflip(), helping explain binomial situations without for() loops -mosaic depends on ggplot2 and dplyr, dplyr is encouraged to use alongside mosaic since it also emphasizes the “less volume, more creativity” approach -”One of the keys to successfully empowering students to think with data is providing them both a conceptual framework that allows them to know what to look for and how to interpret what they find, and a computational toolbox that allows them to do the looking” -allows students to use programming as an asset from the start of their statistical learning -students should also learn the errors that R gives out early on so they can diagnose their own code issues, decrease anxiety and frustration and lower expectations for perfect code Source: infrastructure and tools for teaching statistical computing throughout the statistical curriculum -Goal: To provide guidelines for statistical programming tools for introductory statistics classes since as time progresses, programming has emerged as a requirement for statistics, especially when dealing with the practical and relevant datasets of today. -Programming is necessary for people pursuing stats, so it’s a matter of how and when to teach these skills -Students need to be exposed early on, but in a supplemental fashion so they can still grasp the already dense concepts already regularly covered in the classrooms -In the author’s computation classes, there’s a goal to computationally visualize something within the first 10 minutes of the first day -Rstudio is best because it is most practical if students choose to advance, and also isn’t intimidating to write a line or two of code as opposed to screencast instructions of point-and-click software -R enhances problem solving skills in relation to statistics early on -Rstudio as opposed to R may help ease the learning curve by being an IDE -Emphasis on reproducibility in code -Make computing a central part of the statistics course and not just an auxillary one -Doing so makes it easier to not waste time in advanced stats courses explaining how to do preliminary coding because that’s the students’ introduction to it Source: Tidy Data by Hadley Wickham Goal: Will talk about how to best work with tidy data, where each row is an observation, each column is a variable and each observational unit is a table. There are a few techniques that apply to a variety of messy datasets to make them tidy, and a lot of functions that rely on tidy data inputs and outputs to work, so it’s a good practice to use. -not a lot of research on data preparation although it’s the most time-consuming part of the process -data tidying: structuring datasets to facilitate analysis -data structure is always set with tidy data, don’t need to work out kinks of other issues in manual-induced ones -tidy datasets work symmetrically with tidy tools -don’t need to work on data logistics, but can go right to the problem -tidy data framework based on Hadley’s experience with real-world problems and datasets and then teaching students those skills -generally, measured variables are listed after fixed ones, and related ones are next to each other by column -rows are ordered by the first variable -tidy tools: “tools that take tidy datasets as input and return tidy datasets as output. Tidy tools are useful because the output of one tool can be used as the input to another.” -most data transformation operations are made easier by having each variable as a column "],
["3-data.html", "Chapter 3 Data 3.1 Final Project 3.2 Student Groups 3.3 Dataset Background", " Chapter 3 Data 3.1 Final Project The final project simulates a complete data analysis using relevant techniques covered throughout the STA 101 curriculum. The final project is the second of two that groups complete, but it differs drastically from the frst. Whereas the first project focuses on statistical inference and the dataset description, the second one is more comprehensive in its requirements, with specifications for EDA and regression sections, as well as more creativity to address the final project’s directives. In the final project, student groups simulate a task at a new music studio where their boss hypothetically assigns two goals: the boss wants to learn about the attributes that make a movie popular and also something new about movies. The final project contains five components—an introduction, a univariate analysis, a bivariate analysis, a multiple regression for predicting audience scores, and a conclusion. The regression section is relatively constant amongst groups in determining an optimal regression. However, in the univariate and bivariate analyses, student groups can explore a variety of different options, often differentiating between the relative strengths of the projects. FOR MINE: Should I include an example in the appendix? The student project dataset has been nearly constant throughout this analysis, and it tracks a random sample of American movies released since 1970. The student project dataset contains between 25 and 32 variables summmarizing the movie’s general characteristics, such as runtime, genre, and production studio, award trackers, such as best picture, best actor, best actress and best director indicator variables, as well as data from an online film review website (Rotten Tomatoes) and an online movie database (IMDB). Although variables such as the producing studio, the month and day of the week of both the theatre and DVD releases, IMDB rating (out of 10) and audience rating on Rotten Tomatoes are not included in the original 2013 dataset, student groups were provided with a sufficient amount of potential variables to analyze. The student project dataset’s most recent codebook, directly copied from the Spring 2016 project assignment, is available in the appendix. 3.2 Student Groups Students reamined in the same groups they were assigned at the beginning of the semester since the groups were crafted based on the results of both a pre-test and a survey. Both the pre-test and the survey were geared toward understanding each individual’s statistical background and literacy upon entering the course. Students worked through each lab assignment together, which consisted of exercises in R, and were encouraged to study together for exams as well. FOR MINE: INSERT REASON FOR HAVING STUDENT GROUPS 3.3 Dataset Background The dataset has been manually compiled from 205 STA 101 final group projects spanning the 2013-2016 academic years. The projects’ contents are located on Duke’s Sakai sites of seven different classes, six of which were taught by Dr. Cetinkaya-Rundel. However, the professor themself does not affect much of the R learning over the course of the semester, since it occurs within student’s labs, which are led by teaching assistants. Although there may be some slight instructor effects on coding abilities, the teaching assistants are the primary educators of R, and they generally change each semester. Therefore, some sections may have stronger grasps of coding for the final project, but it is likely to be minimal since teaching assistants are apprised of the upcoming week’s content via weekly meetings with the professor. In the case of the final project, the submitted file(s) were in either R Markdown or an R script. The dataset utilized in this paper primarily focuses on actions taken by groups within the univariate and bivariate portions of the projects. In doing so, the the dataset contains variables summarizing relative creativity measures, as well as the projects’ depth. Explanations of each variable will be available in the following chapter. "],
["4-methods.html", "Chapter 4 Methods 4.1 Creativity 4.2 Depth", " Chapter 4 Methods Since 98 percent of the projects were submitted either as an R script or R Markdown document, the student project code could be analyzed directly on their downloaded submission documents. Each project was examined and coded as either a 0, if the attribute was missing, or 1, if it was present, for 16 variables. The remaining three covariates identified the student projects by grade, index, and class. Due to privacy concerns, since the project submissions often contained the members of the project group, each student project was provided with an index, and the names of the students in each group were removed from their submission document. For the dataset utilized in this thesis, projects can solely be identified by their assigned index. A separate dataset serves as a link between the individual projects and their titles. The first few rows of the dataset compiled in this project are available below. head(project) # A tibble: 6 x 21 index grade sem r_rmd tidyverse create_new_var change_var sub_analysis &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 1 87.1 Fall… .r base R no no yes 2 2 89.2 Fall… .r base R yes no yes 3 3 80.2 Fall… .r base R no no yes 4 4 87.2 Fall… .r base R yes no yes 5 5 80.4 Fall… .r base R no no yes 6 6 (h… 75.9 Fall… .r base R &lt;NA&gt; &lt;NA&gt; no # … with 13 more variables: sub_data &lt;chr&gt;, viz_mult_mak &lt;chr&gt;, # viz_mult_interpret &lt;chr&gt;, eda_theme &lt;chr&gt;, rel_data &lt;chr&gt;, # slr_fit &lt;chr&gt;, mlr_fit &lt;chr&gt;, mlr_check_cond &lt;chr&gt;, prediction &lt;chr&gt;, # ht &lt;chr&gt;, ht_check_cond &lt;chr&gt;, creative &lt;dbl&gt;, theme &lt;dbl&gt; The student projects were not compiled into PDF or HTML files to confirm that the code worked, since it was a near-impossible task to determine which version of R packages the students utilized, as some of these commands are now defunct in the most recent versions of the packages. Because of this decision, this analysis operates under the assumption that the code produced the desired results in each project and did not require further debugging. The contents of the student project code were still analyzed for clarity, as well as creativeness and depth through the 16 indicator variables. index: Project ID grade: Score on final project sem: Semester course taken r_rmd: Was the submission an R script (with prose of the project turned in as a Word document) or was the submission an R Markdown file? tidyverse: Project used &quot;tidyverse&quot; or &quot;base R&quot; syntax create_new_var: Students created a new variable based on existing variables, &quot;yes&quot; or &quot;no&quot;, change_var: hello sub_analysis: hello sub_data: hello viz_mult_mak: hello viz_mult_interpret: hello eda_theme: hello rel_data: hello slr_fit: hello mlr_fit: hello mlr_check_cond: hello prediction: hello ht: hello ht_check_cond: hello 4.1 Creativity The creativity metric seeks to encapsulate anything students coded that was not directly specified in the instructions but provided a purpose in their projects. The metric’s possible scores range from 0 to 4, as a project is scored with a single point for each of the following: Creation of new variable(s) based on existing variables Transformation of existing variables Existence of a subgroup analysis The use of a subset of the dataset for all steps of the project In the case of the student group projects utilizing the Tidyverse syntax, groups were still given scores of ones if they satisfied these conditions in Base R form. While rare, two (NEED TO CONFIRM) groups in labs taught in the Tidyverse created or transformed covariates using Base R syntax, which was likely due to alternative resources, such as Stack Overflow, that at the time, did not contain many Tidyverse solutions. Now, though, as the Tidyverse’s popularity continues to grow, more online resources incorporate and promote Tidyverse solutions. 4.1.1 Creation of New Variable(s) The creation of a new variable(s) is defined as any data manipulation throughout the EDA process where student groups compose a previously non-existing covariate. As an example, one project created a new variable tracking if a movie had won any of the following awards: best picture, best actor, best actress, or best director, and that project had this variable coded as “yes.” In order to score a 1, the student project also had to utilize the new variable within an aspect of their analysis. This condition filtered for groups that created unnecessary covariates. However, a score of 1 would be valid if the group did not use the variable in the inference or regression sections, but did explore the covariate in their EDA. 4.1.2 Transformation of Existing Variables Although related to the above covariate, the transformation of existing variables did not qualify as creating new variables, or vice versa. In this situation, a project would score a one if the student group mutated a variable already existing within the dataset, generally to highlight certain cases. For instance, a few project groups decided to change mpaa_rating to either “R” or “Other,” if the movie was not rated R. Similar to the requirements for scoring a one for the creation of new variable(s) covariate, the mutation was required to be employed to some end, as groups would have to provide at least a cursory analysis of the newly-mutated variable to score a one. A distinction between scoring a one for this covariate and one for subsetting the dataset or conducting a subgroup analysis is that filtering the dataset for just entries that cover a portion of levels within a specific variable would qualify as a part of either a subgroup analysis or data subset, but not this covariate. Also, converting a factor variable that could be potentially read in as one when loading the dataset did not qualify as a mutation of an existing variable for this study. 4.1.3 Existence of Subgroup Analysis The presence of a subgroup analysis was measured in regards to creativity. Projects that received a one analyzed portions of the data during their EDA process. Groups could use an assortment of commands to satisfy a score of a 1, such as a normal boxplot, five-number summary of a specific variable within the movies dataset, or a subsetting with a corresponding numerical or graphical analysis. As an example, a project receiving a one for this category may have analyzed how the audience ratings for R rated movies compared to that of PG-13 movies in their bivariate analysis. 4.1.4 Use of a Data Subset for Project’s Entirety Although the use of a data subset covariate may seem similar to the one above, this variable received a one for a different aspect of the final group projects. Here, student groups are not just using the provided movies dataset for their EDA, inference, and regression—they are intentionally focusing on a few characteristics of the movie dataset. Student projects were not required to employ the same subsetted data throughout the entire analysis, but they did have to analyze related aspects of the movies dataset to qualify for a one. For example, one student group scrutinized solely PG-13 rated movies for their final project, while another used the PG-13 rated movies subset for the EDA, PG-13 movies released after 2000 for the inference, and then the same PG-13 rated movies subset utilized in the EDA process for their regression analysis. 4.2 Depth The depth metric measures the level of depth of the analysis, both in terms of the statistical methods utilized and in terms of story-telling. The metric ranges from 0-2 and is scored with 1 point for each of the following: Presence of consistent theme throughout the project Use of relevant data The depth metric was created to qualify findings from the creativity score, to confirm that the syntax producing the more creative student projects also were of the same (or better) quality. Although creativity is imperative in these final projects, student groups also cannot skip parts of the data analysis cycle. 4.2.1 Consistent Theme In the world of data science, story-telling is such an important aspect, just as story-telling is designed to be for the STA 101 final group projects. A strong final project requires a story: a leading question, initial findings, subsequent analyses, and conclusion, all formed around a specific theme. Although this covariate’s scoring was subjective, the requirements for final projects to score a one were similar to those defining the creativity metric. To receive a one, student groups clearly linked the steps in their analysis, often choosing to focus on a few aspects within the entire movie dataset. For instance, analyzing the impact of movie ratings on audience scores would qualify as a sufficient theme, but referencing an assortment of different predictors would not register as one. 4.2.2 Presence of Relevant Data Another subjective variable, the presence of relevant data was formed to complement the consistent theme covariate. To receive a one for this variable, student groups were required to sufficiently use R to create insights surrounding their chosen theme(s). The covariate addresses the issue that projects may have interesting themes but lack the analysis and coding quality to supplement their project. As an example, an aspect of a group project that would have scored a one for this category would have displayed the correlation coefficient between two numerical variables instead of plotting them together and failing to acknowledge the figure in the project submission. If the majority of the coding could be employed to support the final project, the project group received a one. "],
["5-results.html", "Chapter 5 Results 5.1 Creativity Metric", " Chapter 5 Results Both numerically and graphically, the student projects using the tidyverse syntax in this setting score higher on the creativity and depth metrics. Tidyverse projects overwhelmingly score higher in the upper levels of the two variables, and their mean and standard deviations are significantly different: [TO DO FROM MINE: Move to respective sections, and add a similar table for multivariate visualizations.] Creativity: Syntax | Mean | Standard Deviation ——— | —– ————- Base R | 1.1 | .6 Tidyverse | 1.7 | .8 Depth: Syntax | Mean | Standard Deviation ——— | —– ————- Base R | 1.2 | .7 Tidyverse | 1.4 | .7 5.1 Creativity Metric Despite there being only 82 base R projects recorded to the 123 Tidyverse projects, there still were more base R projects scoring a 0 or 1 on the creativity metric than those within the Tidyverse. Overall, there was a single project that scored a perfect four, and the majority of the total projects scored a one or two. Yet within the Tidyverse projects, more than half (56.1 percent) registered at least a two on creativity, compared to just 20.7 percent of base R final projects. The complete distribution is listed below: tidyverse creative n prop base R 0 10 12.2% base R 1 53 64.6% base R 2 15 18.3% base R 3 2 2.4% base R NA 2 2.4% tidyverse 0 5 4.1% tidyverse 1 47 38.2% tidyverse 2 52 42.3% tidyverse 3 16 13.0% tidyverse 4 1 0.8% tidyverse NA 2 1.6% Warning in mutate_impl(.data, dots, caller_env()): Unequal factor levels: coercing to character Warning in mutate_impl(.data, dots, caller_env()): binding character and factor vector, coercing into character vector Warning in mutate_impl(.data, dots, caller_env()): binding character and factor vector, coercing into character vector The following subsections will dissect the similarities and differences between base R and tidyverse student projects for the four variables combined to form the creativity metric, as well as postulate reasons for the distributions. 5.1.1 Creation of New Variable(s) The largest difference in proportions for the four variables that make up the creativity metric is within the creation of new variable category. Nearly half of all final projects using the Tidyverse syntax featured a creation of a new variable, whereas less than a quarter of base R projects did. tidyverse create_new_var n proportion base R yes 18 22.0% tidyverse yes 59 48.0% This difference may be due to the easability in utilizing the Tidyverse’s mutate() function, which allows users to create new variables using just one command. In Base R, students are instructed to use $ notation, which may be construed as harder to grasp due to issues with variable selection with $ and its usage in other base R tasks than just creating new variables. In fact, it seems as though slightly more base R studies changed pre-existing variables. tidyverse change_var n prop base R yes 2 2.4% tidyverse yes 9 7.3% The mechanisms for doing so are not much more complicated in base R. An example of changing an existing studio variable to “Warner Bros. Studios” or “Other” is listed below in both Base R and the Tidyverse for comparison: Tidyverse: movies &lt;- movies %&gt;% mutate(studio = (if_else(studio == &quot;Warner Bros. Pictures&quot;, &quot;Warner Bros. Pictures&quot;, &quot;Other&quot;)) Base R: movies$studio &lt;- if_else(movies$studio == &quot;Warner Bros. Pictures&quot;, &quot;Warner Bros. Pictures&quot;, &quot;Other&quot;) The other two variables need to be re-inputted and updated, so the language and subsections remain below to avoid confusion. 5.1.2 Subgroup Analysis The presence of a form of a subgroup analysis was measured in regards to creativity. To score a 1 for this variable, projects analyzed a portion of the data for parts of their EDA. As an example, a project receiving a “yes” for this category may have analyzed how the audience ratings for R rated movies compared to that of PG-13 movies in their bivariate analysis. This variable has not been recoded yet. tidyverse sub_analysis n prop base R yes 65 79.3% tidyverse yes 115 93.5% 5.1.3 Subsetting dataset The final variable included in the creativity metric was the usage of a subset of the data for the entire analysis, such as analyzing solely PG movies for the scope of the analysis. This variable has also not been recoded yet fully, but it appears as though Tidyverse projects have a signficantly higher proportion. tidyverse sub_data n prop base R yes 4 4.9% tidyverse yes 20 16.3% Warning in mean.default(sub_data): argument is not numeric or logical: returning NA Warning in mean.default(sub_data): argument is not numeric or logical: returning NA Warning in var(if (is.vector(x) || is.factor(x)) x else as.double(x), na.rm = na.rm): NAs introduced by coercion Warning in var(if (is.vector(x) || is.factor(x)) x else as.double(x), na.rm = na.rm): NAs introduced by coercion # A tibble: 2 x 3 tidyverse mean sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 base R NA NA 2 tidyverse NA NA 5.1.4 Overall theme As for a rough comparison of project quality, a new variable devised of a summation of a theme throughout the exploratory data analysis and the use of relevant and sufficient supporting data. (Could be facilitated by the tidyverse?) By the use of relevant and sufficient supporting data, the covariate seeks to address the issue that projects may have interesting themes but lack the analysis and coding quality to supplement their project. Thus, a category tracking relevant data, such as finding the correlation in a linear regression instead of merely plotting the two variables together, was created. Thus far, it appears as though a higher proportion of Tidyverse projects reach a certain quality. This may be due to the ease in using the Tidyverse suit of commands in a fashion that make the project easier to code as beginners in R. tidyverse theme n prop base R 0 12 14.6% base R 1 40 48.8% base R 2 28 34.1% base R NA 2 2.4% tidyverse 0 14 11.4% tidyverse 1 47 38.2% tidyverse 2 60 48.8% tidyverse NA 2 1.6% HERE’S THE DEPTH TABLE: Syntax | Mean | Standard Deviation ——— | —– ————- Base R | 1.2 | .7 Tidyverse | 1.4 | .8 Both variables within theme reflect this trend. A present theme throughout EDA is present in a greater proportion of Tidyverse projects. As an example, analyzing the impact of movie ratings on audience scores would be a sufficient theme, but referencing an assortment of different predictors would not register as one. tidyverse eda_theme n prop base R yes 47 57.3% tidyverse yes 88 71.5% The significant difference in couhts could be attributed to the select() function in the Tidyverse. Tidyverse projects also had a substantially higher margin of projects with relevant supplmenetary data analyses. tidyverse rel_data n prop base R yes 49 59.8% tidyverse yes 79 64.2% 5.1.5 Grades NOT IMPORTANT RIGHT NOW Not important: When analyzing the difference in grade distributions between Tidyverse and Base R courses, the Base R ones are not significantly higher. Upon a closer look at individual semesters, though, it is clear that the Fall 2013 grade distribution is significantly higher than any of the others, and thus, it makes sense to scale the grade variable by semester. tidyverse mean(grade, na.rm = TRUE) sd(grade, na.rm = TRUE) base R 87.00366 5.089191 tidyverse 85.39187 6.245439 sem mean(grade, na.rm = TRUE) sd(grade, na.rm = TRUE) Fall 2013 89.76087 2.587160 Fall 2014 85.29333 4.575190 Fall 2015-Section 01 85.45000 7.871679 Fall 2015-Section 06 86.06667 4.425111 Spring 2015 86.58621 6.198889 Spring 2016-Section 002 81.54333 6.639936 Spring 2016-Section 01 88.06571 3.951541 "],
["6-educational-resources.html", "Chapter 6 Educational Resources", " Chapter 6 Educational Resources "],
["conclusion.html", "Conclusion", " Conclusion If we don’t want Conclusion to have a chapter number next to it, we can add the {-} attribute. More info And here’s some other random info: the first paragraph after a chapter title or section head shouldn’t be indented, because indents are to tell the reader that you’re starting a new paragraph. Since that’s obvious after a chapter or section title, proper typesetting doesn’t add an indent there. This is for lab part Previous Dataset Reason for Change New Dataset Body Dimensions Focuses on weight comparison across binary genders Fast Food Nutritional Facts Atheism and Religion Unverified Dataset Youth Risk Behavior Surveillance System Baseball Required further dataset explanation Human Freedom Index North Carolina Births Dated + Not relevant for most undergrads Youth Risk Behavior Surveillance System reprex::reprex(input = c(“inference(y = weight, x = habit, data = nc, statistic = ‘mean’, type = ‘ht’, null = 0, alternative = ‘twosided’, method = ‘theoretical’)”), venue = “rtf”) obs_diff &lt;- yrbss %&gt;% specify(weight ~ physical_3plus) %&gt;% calculate(stat = “diff in means”, order = c(“yes”, “no”)) null &lt;- yrbss %&gt;% specify(weight ~ physical_3plus) %&gt;% hypothesize(null = “independence”) %&gt;% generate(reps = 1000, type = “permute”) %&gt;% calculate(stat = “diff in means”, order = c(“yes”, “no”)) null %&gt;% get_p_value(obs_stat = obs_diff, direction = “two_sided”) If you feel it necessary to include an appendix, it goes here. --> "],
["A-the-first-appendix.html", "A The First Appendix", " A The First Appendix This first appendix includes all of the R chunks of code that were hidden throughout the document (using the include = FALSE chunk tag) to help with readibility and/or setup. In the main Rmd file library(thesisdowndss) library(servr) In Chapter ??: "],
["B-the-second-appendix-for-fun.html", "B The Second Appendix, for Fun", " B The Second Appendix, for Fun "],
["references.html", "References", " References "]
]
